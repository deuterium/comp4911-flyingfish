#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FFLib
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FlyingFish")]
	public partial class FlyingFishClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void InsertDefaultTimeSheet(DefaultTimeSheet instance);
    partial void UpdateDefaultTimeSheet(DefaultTimeSheet instance);
    partial void DeleteDefaultTimeSheet(DefaultTimeSheet instance);
    partial void InsertWorkPackageStatusReport(WorkPackageStatusReport instance);
    partial void UpdateWorkPackageStatusReport(WorkPackageStatusReport instance);
    partial void DeleteWorkPackageStatusReport(WorkPackageStatusReport instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeeMembership(EmployeeMembership instance);
    partial void UpdateEmployeeMembership(EmployeeMembership instance);
    partial void DeleteEmployeeMembership(EmployeeMembership instance);
    partial void InsertEmployeePersonLevel(EmployeePersonLevel instance);
    partial void UpdateEmployeePersonLevel(EmployeePersonLevel instance);
    partial void DeleteEmployeePersonLevel(EmployeePersonLevel instance);
    partial void InsertEmployeeProject(EmployeeProject instance);
    partial void UpdateEmployeeProject(EmployeeProject instance);
    partial void DeleteEmployeeProject(EmployeeProject instance);
    partial void InsertEmployeeWorkPackage(EmployeeWorkPackage instance);
    partial void UpdateEmployeeWorkPackage(EmployeeWorkPackage instance);
    partial void DeleteEmployeeWorkPackage(EmployeeWorkPackage instance);
    partial void InsertEmployeeWorkPackageETC(EmployeeWorkPackageETC instance);
    partial void UpdateEmployeeWorkPackageETC(EmployeeWorkPackageETC instance);
    partial void DeleteEmployeeWorkPackageETC(EmployeeWorkPackageETC instance);
    partial void InsertHumanResourcesStaff(HumanResourcesStaff instance);
    partial void UpdateHumanResourcesStaff(HumanResourcesStaff instance);
    partial void DeleteHumanResourcesStaff(HumanResourcesStaff instance);
    partial void InsertPersonLevel(PersonLevel instance);
    partial void UpdatePersonLevel(PersonLevel instance);
    partial void DeletePersonLevel(PersonLevel instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertTimeSheetEntry(TimeSheetEntry instance);
    partial void UpdateTimeSheetEntry(TimeSheetEntry instance);
    partial void DeleteTimeSheetEntry(TimeSheetEntry instance);
    partial void InsertTimeSheetHeader(TimeSheetHeader instance);
    partial void UpdateTimeSheetHeader(TimeSheetHeader instance);
    partial void DeleteTimeSheetHeader(TimeSheetHeader instance);
    partial void InsertWorkPackage(WorkPackage instance);
    partial void UpdateWorkPackage(WorkPackage instance);
    partial void DeleteWorkPackage(WorkPackage instance);
    partial void InsertWorkPackageBudgetPM(WorkPackageBudgetPM instance);
    partial void UpdateWorkPackageBudgetPM(WorkPackageBudgetPM instance);
    partial void DeleteWorkPackageBudgetPM(WorkPackageBudgetPM instance);
    partial void InsertWorkPackageEstimateRE(WorkPackageEstimateRE instance);
    partial void UpdateWorkPackageEstimateRE(WorkPackageEstimateRE instance);
    partial void DeleteWorkPackageEstimateRE(WorkPackageEstimateRE instance);
    partial void InsertWorkPackageResponsibleEngineer(WorkPackageResponsibleEngineer instance);
    partial void UpdateWorkPackageResponsibleEngineer(WorkPackageResponsibleEngineer instance);
    partial void DeleteWorkPackageResponsibleEngineer(WorkPackageResponsibleEngineer instance);
    #endregion
		
		public FlyingFishClassesDataContext() : 
				base(global::FFLib.Properties.Settings.Default.FlyingFishConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FlyingFishClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlyingFishClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlyingFishClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlyingFishClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<DefaultTimeSheet> DefaultTimeSheets
		{
			get
			{
				return this.GetTable<DefaultTimeSheet>();
			}
		}
		
		public System.Data.Linq.Table<WorkPackageStatusReport> WorkPackageStatusReports
		{
			get
			{
				return this.GetTable<WorkPackageStatusReport>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeMembership> EmployeeMemberships
		{
			get
			{
				return this.GetTable<EmployeeMembership>();
			}
		}
		
		public System.Data.Linq.Table<EmployeePersonLevel> EmployeePersonLevels
		{
			get
			{
				return this.GetTable<EmployeePersonLevel>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeProject> EmployeeProjects
		{
			get
			{
				return this.GetTable<EmployeeProject>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeWorkPackage> EmployeeWorkPackages
		{
			get
			{
				return this.GetTable<EmployeeWorkPackage>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeWorkPackageETC> EmployeeWorkPackageETCs
		{
			get
			{
				return this.GetTable<EmployeeWorkPackageETC>();
			}
		}
		
		public System.Data.Linq.Table<HumanResourcesStaff> HumanResourcesStaffs
		{
			get
			{
				return this.GetTable<HumanResourcesStaff>();
			}
		}
		
		public System.Data.Linq.Table<PersonLevel> PersonLevels
		{
			get
			{
				return this.GetTable<PersonLevel>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetEntry> TimeSheetEntries
		{
			get
			{
				return this.GetTable<TimeSheetEntry>();
			}
		}
		
		public System.Data.Linq.Table<TimeSheetHeader> TimeSheetHeaders
		{
			get
			{
				return this.GetTable<TimeSheetHeader>();
			}
		}
		
		public System.Data.Linq.Table<WorkPackage> WorkPackages
		{
			get
			{
				return this.GetTable<WorkPackage>();
			}
		}
		
		public System.Data.Linq.Table<WorkPackageBudgetPM> WorkPackageBudgetPMs
		{
			get
			{
				return this.GetTable<WorkPackageBudgetPM>();
			}
		}
		
		public System.Data.Linq.Table<WorkPackageEstimateRE> WorkPackageEstimateREs
		{
			get
			{
				return this.GetTable<WorkPackageEstimateRE>();
			}
		}
		
		public System.Data.Linq.Table<WorkPackageResponsibleEngineer> WorkPackageResponsibleEngineers
		{
			get
			{
				return this.GetTable<WorkPackageResponsibleEngineer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntitySet<EmployeeMembership> _EmployeeMemberships;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._EmployeeMemberships = new EntitySet<EmployeeMembership>(new Action<EmployeeMembership>(this.attach_EmployeeMemberships), new Action<EmployeeMembership>(this.detach_EmployeeMemberships));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_EmployeeMembership", Storage="_EmployeeMemberships", ThisKey="UserId", OtherKey="userId")]
		public EntitySet<EmployeeMembership> EmployeeMemberships
		{
			get
			{
				return this._EmployeeMemberships;
			}
			set
			{
				this._EmployeeMemberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeMemberships(EmployeeMembership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Membership = this;
		}
		
		private void detach_EmployeeMemberships(EmployeeMembership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Membership = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefaultTimeSheet")]
	public partial class DefaultTimeSheet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private System.DateTime _tsDate;
		
		private EntityRef<TimeSheetHeader> _TimeSheetHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OntsDateChanging(System.DateTime value);
    partial void OntsDateChanged();
    #endregion
		
		public DefaultTimeSheet()
		{
			this._TimeSheetHeader = default(EntityRef<TimeSheetHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._TimeSheetHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tsDate", DbType="Date NOT NULL")]
		public System.DateTime tsDate
		{
			get
			{
				return this._tsDate;
			}
			set
			{
				if ((this._tsDate != value))
				{
					if (this._TimeSheetHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntsDateChanging(value);
					this.SendPropertyChanging();
					this._tsDate = value;
					this.SendPropertyChanged("tsDate");
					this.OntsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheetHeader_DefaultTimeSheet", Storage="_TimeSheetHeader", ThisKey="empId,tsDate", OtherKey="empId,tsDate", IsForeignKey=true)]
		public TimeSheetHeader TimeSheetHeader
		{
			get
			{
				return this._TimeSheetHeader.Entity;
			}
			set
			{
				TimeSheetHeader previousValue = this._TimeSheetHeader.Entity;
				if (((previousValue != value) 
							|| (this._TimeSheetHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeSheetHeader.Entity = null;
						previousValue.DefaultTimeSheets.Remove(this);
					}
					this._TimeSheetHeader.Entity = value;
					if ((value != null))
					{
						value.DefaultTimeSheets.Add(this);
						this._empId = value.empId;
						this._tsDate = value.tsDate;
					}
					else
					{
						this._empId = default(int);
						this._tsDate = default(System.DateTime);
					}
					this.SendPropertyChanged("TimeSheetHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkPackageStatusReport")]
	public partial class WorkPackageStatusReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projId;
		
		private string _wpId;
		
		private System.DateTime _reportDate;
		
		private string _comments;
		
		private string _workAccomplished;
		
		private string _workPlannedNext;
		
		private string _problemsEncountered;
		
		private string _problemsAnticipated;
		
		private EntitySet<EmployeeWorkPackageETC> _EmployeeWorkPackageETCs;
		
		private EntityRef<WorkPackage> _WorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OnreportDateChanging(System.DateTime value);
    partial void OnreportDateChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnworkAccomplishedChanging(string value);
    partial void OnworkAccomplishedChanged();
    partial void OnworkPlannedNextChanging(string value);
    partial void OnworkPlannedNextChanged();
    partial void OnproblemsEncounteredChanging(string value);
    partial void OnproblemsEncounteredChanged();
    partial void OnproblemsAnticipatedChanging(string value);
    partial void OnproblemsAnticipatedChanged();
    #endregion
		
		public WorkPackageStatusReport()
		{
			this._EmployeeWorkPackageETCs = new EntitySet<EmployeeWorkPackageETC>(new Action<EmployeeWorkPackageETC>(this.attach_EmployeeWorkPackageETCs), new Action<EmployeeWorkPackageETC>(this.detach_EmployeeWorkPackageETCs));
			this._WorkPackage = default(EntityRef<WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime reportDate
		{
			get
			{
				return this._reportDate;
			}
			set
			{
				if ((this._reportDate != value))
				{
					this.OnreportDateChanging(value);
					this.SendPropertyChanging();
					this._reportDate = value;
					this.SendPropertyChanged("reportDate");
					this.OnreportDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workAccomplished", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string workAccomplished
		{
			get
			{
				return this._workAccomplished;
			}
			set
			{
				if ((this._workAccomplished != value))
				{
					this.OnworkAccomplishedChanging(value);
					this.SendPropertyChanging();
					this._workAccomplished = value;
					this.SendPropertyChanged("workAccomplished");
					this.OnworkAccomplishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_workPlannedNext", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string workPlannedNext
		{
			get
			{
				return this._workPlannedNext;
			}
			set
			{
				if ((this._workPlannedNext != value))
				{
					this.OnworkPlannedNextChanging(value);
					this.SendPropertyChanging();
					this._workPlannedNext = value;
					this.SendPropertyChanged("workPlannedNext");
					this.OnworkPlannedNextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_problemsEncountered", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string problemsEncountered
		{
			get
			{
				return this._problemsEncountered;
			}
			set
			{
				if ((this._problemsEncountered != value))
				{
					this.OnproblemsEncounteredChanging(value);
					this.SendPropertyChanging();
					this._problemsEncountered = value;
					this.SendPropertyChanged("problemsEncountered");
					this.OnproblemsEncounteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_problemsAnticipated", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string problemsAnticipated
		{
			get
			{
				return this._problemsAnticipated;
			}
			set
			{
				if ((this._problemsAnticipated != value))
				{
					this.OnproblemsAnticipatedChanging(value);
					this.SendPropertyChanging();
					this._problemsAnticipated = value;
					this.SendPropertyChanged("problemsAnticipated");
					this.OnproblemsAnticipatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackageStatusReport_EmployeeWorkPackageETC", Storage="_EmployeeWorkPackageETCs", ThisKey="projId,wpId,reportDate", OtherKey="projId,wpId,dateUpdated")]
		public EntitySet<EmployeeWorkPackageETC> EmployeeWorkPackageETCs
		{
			get
			{
				return this._EmployeeWorkPackageETCs;
			}
			set
			{
				this._EmployeeWorkPackageETCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_WorkPackageStatusReport", Storage="_WorkPackage", ThisKey="projId,wpId", OtherKey="projId,wpId", IsForeignKey=true)]
		public WorkPackage WorkPackage
		{
			get
			{
				return this._WorkPackage.Entity;
			}
			set
			{
				WorkPackage previousValue = this._WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkPackage.Entity = null;
						previousValue.WorkPackageStatusReports.Remove(this);
					}
					this._WorkPackage.Entity = value;
					if ((value != null))
					{
						value.WorkPackageStatusReports.Add(this);
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeWorkPackageETCs(EmployeeWorkPackageETC entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackageStatusReport = this;
		}
		
		private void detach_EmployeeWorkPackageETCs(EmployeeWorkPackageETC entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackageStatusReport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _password;
		
		private int _supervisor;
		
		private int _approver;
		
		private decimal _minHoursPerWeek;
		
		private int _vacationLeave;
		
		private int _sickDays;
		
		private decimal _flexHours;
		
		private int _isActive;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Employee> _Employees1;
		
		private EntityRef<EmployeeMembership> _EmployeeMembership;
		
		private EntitySet<EmployeeProject> _EmployeeProjects;
		
		private EntityRef<HumanResourcesStaff> _HumanResourcesStaff;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<TimeSheetHeader> _TimeSheetHeaders;
		
		private EntitySet<TimeSheetHeader> _TimeSheetHeaders1;
		
		private EntityRef<Employee> _Employee1;
		
		private EntityRef<Employee> _Employee2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnsupervisorChanging(int value);
    partial void OnsupervisorChanged();
    partial void OnapproverChanging(int value);
    partial void OnapproverChanged();
    partial void OnminHoursPerWeekChanging(decimal value);
    partial void OnminHoursPerWeekChanged();
    partial void OnvacationLeaveChanging(int value);
    partial void OnvacationLeaveChanged();
    partial void OnsickDaysChanging(int value);
    partial void OnsickDaysChanged();
    partial void OnflexHoursChanging(decimal value);
    partial void OnflexHoursChanged();
    partial void OnisActiveChanging(int value);
    partial void OnisActiveChanged();
    #endregion
		
		public Employee()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Employees1 = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees1), new Action<Employee>(this.detach_Employees1));
			this._EmployeeMembership = default(EntityRef<EmployeeMembership>);
			this._EmployeeProjects = new EntitySet<EmployeeProject>(new Action<EmployeeProject>(this.attach_EmployeeProjects), new Action<EmployeeProject>(this.detach_EmployeeProjects));
			this._HumanResourcesStaff = default(EntityRef<HumanResourcesStaff>);
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._TimeSheetHeaders = new EntitySet<TimeSheetHeader>(new Action<TimeSheetHeader>(this.attach_TimeSheetHeaders), new Action<TimeSheetHeader>(this.detach_TimeSheetHeaders));
			this._TimeSheetHeaders1 = new EntitySet<TimeSheetHeader>(new Action<TimeSheetHeader>(this.attach_TimeSheetHeaders1), new Action<TimeSheetHeader>(this.detach_TimeSheetHeaders1));
			this._Employee1 = default(EntityRef<Employee>);
			this._Employee2 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor", DbType="Int NOT NULL")]
		public int supervisor
		{
			get
			{
				return this._supervisor;
			}
			set
			{
				if ((this._supervisor != value))
				{
					if (this._Employee2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupervisorChanging(value);
					this.SendPropertyChanging();
					this._supervisor = value;
					this.SendPropertyChanged("supervisor");
					this.OnsupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approver", DbType="Int NOT NULL")]
		public int approver
		{
			get
			{
				return this._approver;
			}
			set
			{
				if ((this._approver != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapproverChanging(value);
					this.SendPropertyChanging();
					this._approver = value;
					this.SendPropertyChanged("approver");
					this.OnapproverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minHoursPerWeek", DbType="Decimal(3,1) NOT NULL")]
		public decimal minHoursPerWeek
		{
			get
			{
				return this._minHoursPerWeek;
			}
			set
			{
				if ((this._minHoursPerWeek != value))
				{
					this.OnminHoursPerWeekChanging(value);
					this.SendPropertyChanging();
					this._minHoursPerWeek = value;
					this.SendPropertyChanged("minHoursPerWeek");
					this.OnminHoursPerWeekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vacationLeave", DbType="Int NOT NULL")]
		public int vacationLeave
		{
			get
			{
				return this._vacationLeave;
			}
			set
			{
				if ((this._vacationLeave != value))
				{
					this.OnvacationLeaveChanging(value);
					this.SendPropertyChanging();
					this._vacationLeave = value;
					this.SendPropertyChanged("vacationLeave");
					this.OnvacationLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sickDays", DbType="Int NOT NULL")]
		public int sickDays
		{
			get
			{
				return this._sickDays;
			}
			set
			{
				if ((this._sickDays != value))
				{
					this.OnsickDaysChanging(value);
					this.SendPropertyChanging();
					this._sickDays = value;
					this.SendPropertyChanged("sickDays");
					this.OnsickDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flexHours", DbType="Decimal(3,1) NOT NULL")]
		public decimal flexHours
		{
			get
			{
				return this._flexHours;
			}
			set
			{
				if ((this._flexHours != value))
				{
					this.OnflexHoursChanging(value);
					this.SendPropertyChanging();
					this._flexHours = value;
					this.SendPropertyChanged("flexHours");
					this.OnflexHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Int NOT NULL")]
		public int isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employees", ThisKey="empId", OtherKey="approver")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee1", Storage="_Employees1", ThisKey="empId", OtherKey="supervisor")]
		public EntitySet<Employee> Employees1
		{
			get
			{
				return this._Employees1;
			}
			set
			{
				this._Employees1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeMembership", Storage="_EmployeeMembership", ThisKey="empId", OtherKey="empId", IsUnique=true, IsForeignKey=false)]
		public EmployeeMembership EmployeeMembership
		{
			get
			{
				return this._EmployeeMembership.Entity;
			}
			set
			{
				EmployeeMembership previousValue = this._EmployeeMembership.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeMembership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeMembership.Entity = null;
						previousValue.Employee = null;
					}
					this._EmployeeMembership.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("EmployeeMembership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeProject", Storage="_EmployeeProjects", ThisKey="empId", OtherKey="empId")]
		public EntitySet<EmployeeProject> EmployeeProjects
		{
			get
			{
				return this._EmployeeProjects;
			}
			set
			{
				this._EmployeeProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_HumanResourcesStaff", Storage="_HumanResourcesStaff", ThisKey="empId", OtherKey="empId", IsUnique=true, IsForeignKey=false)]
		public HumanResourcesStaff HumanResourcesStaff
		{
			get
			{
				return this._HumanResourcesStaff.Entity;
			}
			set
			{
				HumanResourcesStaff previousValue = this._HumanResourcesStaff.Entity;
				if (((previousValue != value) 
							|| (this._HumanResourcesStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HumanResourcesStaff.Entity = null;
						previousValue.Employee = null;
					}
					this._HumanResourcesStaff.Entity = value;
					if ((value != null))
					{
						value.Employee = this;
					}
					this.SendPropertyChanged("HumanResourcesStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Project", Storage="_Projects", ThisKey="empId", OtherKey="manager")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeSheetHeader", Storage="_TimeSheetHeaders", ThisKey="empId", OtherKey="approvedBy")]
		public EntitySet<TimeSheetHeader> TimeSheetHeaders
		{
			get
			{
				return this._TimeSheetHeaders;
			}
			set
			{
				this._TimeSheetHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeSheetHeader1", Storage="_TimeSheetHeaders1", ThisKey="empId", OtherKey="empId")]
		public EntitySet<TimeSheetHeader> TimeSheetHeaders1
		{
			get
			{
				return this._TimeSheetHeaders1;
			}
			set
			{
				this._TimeSheetHeaders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee1", ThisKey="approver", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._approver = value.empId;
					}
					else
					{
						this._approver = default(int);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee1", Storage="_Employee2", ThisKey="supervisor", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee2
		{
			get
			{
				return this._Employee2.Entity;
			}
			set
			{
				Employee previousValue = this._Employee2.Entity;
				if (((previousValue != value) 
							|| (this._Employee2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee2.Entity = null;
						previousValue.Employees1.Remove(this);
					}
					this._Employee2.Entity = value;
					if ((value != null))
					{
						value.Employees1.Add(this);
						this._supervisor = value.empId;
					}
					else
					{
						this._supervisor = default(int);
					}
					this.SendPropertyChanged("Employee2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_Employees1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = this;
		}
		
		private void detach_Employees1(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee2 = null;
		}
		
		private void attach_EmployeeProjects(EmployeeProject entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_EmployeeProjects(EmployeeProject entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_TimeSheetHeaders(TimeSheetHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_TimeSheetHeaders(TimeSheetHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_TimeSheetHeaders1(TimeSheetHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_TimeSheetHeaders1(TimeSheetHeader entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeMembership")]
	public partial class EmployeeMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private System.Guid _userId;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    #endregion
		
		public EmployeeMembership()
		{
			this._Employee = default(EntityRef<Employee>);
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._aspnet_Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeMembership", Storage="_Employee", ThisKey="empId", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeMembership = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeMembership = this;
						this._empId = value.empId;
					}
					else
					{
						this._empId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Membership_EmployeeMembership", Storage="_aspnet_Membership", ThisKey="userId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.EmployeeMemberships.Remove(this);
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.EmployeeMemberships.Add(this);
						this._userId = value.UserId;
					}
					else
					{
						this._userId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeePersonLevel")]
	public partial class EmployeePersonLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _dateUpdated;
		
		private int _empId;
		
		private string _pLevel;
		
		private decimal _fiscalYear;
		
		private EntityRef<PersonLevel> _PersonLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndateUpdatedChanging(System.DateTime value);
    partial void OndateUpdatedChanged();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnpLevelChanging(string value);
    partial void OnpLevelChanged();
    partial void OnfiscalYearChanging(decimal value);
    partial void OnfiscalYearChanged();
    #endregion
		
		public EmployeePersonLevel()
		{
			this._PersonLevel = default(EntityRef<PersonLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUpdated", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dateUpdated
		{
			get
			{
				return this._dateUpdated;
			}
			set
			{
				if ((this._dateUpdated != value))
				{
					this.OndateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._dateUpdated = value;
					this.SendPropertyChanged("dateUpdated");
					this.OndateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pLevel", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string pLevel
		{
			get
			{
				return this._pLevel;
			}
			set
			{
				if ((this._pLevel != value))
				{
					if (this._PersonLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpLevelChanging(value);
					this.SendPropertyChanging();
					this._pLevel = value;
					this.SendPropertyChanged("pLevel");
					this.OnpLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiscalYear", DbType="Decimal(4,0) NOT NULL")]
		public decimal fiscalYear
		{
			get
			{
				return this._fiscalYear;
			}
			set
			{
				if ((this._fiscalYear != value))
				{
					if (this._PersonLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiscalYearChanging(value);
					this.SendPropertyChanging();
					this._fiscalYear = value;
					this.SendPropertyChanged("fiscalYear");
					this.OnfiscalYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonLevel_EmployeePersonLevel", Storage="_PersonLevel", ThisKey="pLevel,fiscalYear", OtherKey="pLevel,fiscalYear", IsForeignKey=true)]
		public PersonLevel PersonLevel
		{
			get
			{
				return this._PersonLevel.Entity;
			}
			set
			{
				PersonLevel previousValue = this._PersonLevel.Entity;
				if (((previousValue != value) 
							|| (this._PersonLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonLevel.Entity = null;
						previousValue.EmployeePersonLevels.Remove(this);
					}
					this._PersonLevel.Entity = value;
					if ((value != null))
					{
						value.EmployeePersonLevels.Add(this);
						this._pLevel = value.pLevel;
						this._fiscalYear = value.fiscalYear;
					}
					else
					{
						this._pLevel = default(string);
						this._fiscalYear = default(decimal);
					}
					this.SendPropertyChanged("PersonLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeProject")]
	public partial class EmployeeProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projId;
		
		private int _empId;
		
		private EntitySet<EmployeeWorkPackage> _EmployeeWorkPackages;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    #endregion
		
		public EmployeeProject()
		{
			this._EmployeeWorkPackages = new EntitySet<EmployeeWorkPackage>(new Action<EmployeeWorkPackage>(this.attach_EmployeeWorkPackages), new Action<EmployeeWorkPackage>(this.detach_EmployeeWorkPackages));
			this._Employee = default(EntityRef<Employee>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeProject_EmployeeWorkPackage", Storage="_EmployeeWorkPackages", ThisKey="projId,empId", OtherKey="projId,empId")]
		public EntitySet<EmployeeWorkPackage> EmployeeWorkPackages
		{
			get
			{
				return this._EmployeeWorkPackages;
			}
			set
			{
				this._EmployeeWorkPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_EmployeeProject", Storage="_Employee", ThisKey="empId", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.EmployeeProjects.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.EmployeeProjects.Add(this);
						this._empId = value.empId;
					}
					else
					{
						this._empId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_EmployeeProject", Storage="_Project", ThisKey="projId", OtherKey="projId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.EmployeeProjects.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.EmployeeProjects.Add(this);
						this._projId = value.projId;
					}
					else
					{
						this._projId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeWorkPackages(EmployeeWorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeProject = this;
		}
		
		private void detach_EmployeeWorkPackages(EmployeeWorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeProject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeWorkPackage")]
	public partial class EmployeeWorkPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private int _projId;
		
		private string _wpId;
		
		private EntitySet<EmployeeWorkPackageETC> _EmployeeWorkPackageETCs;
		
		private EntitySet<WorkPackageResponsibleEngineer> _WorkPackageResponsibleEngineers;
		
		private EntityRef<EmployeeProject> _EmployeeProject;
		
		private EntityRef<WorkPackage> _WorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    #endregion
		
		public EmployeeWorkPackage()
		{
			this._EmployeeWorkPackageETCs = new EntitySet<EmployeeWorkPackageETC>(new Action<EmployeeWorkPackageETC>(this.attach_EmployeeWorkPackageETCs), new Action<EmployeeWorkPackageETC>(this.detach_EmployeeWorkPackageETCs));
			this._WorkPackageResponsibleEngineers = new EntitySet<WorkPackageResponsibleEngineer>(new Action<WorkPackageResponsibleEngineer>(this.attach_WorkPackageResponsibleEngineers), new Action<WorkPackageResponsibleEngineer>(this.detach_WorkPackageResponsibleEngineers));
			this._EmployeeProject = default(EntityRef<EmployeeProject>);
			this._WorkPackage = default(EntityRef<WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._EmployeeProject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if ((this._EmployeeProject.HasLoadedOrAssignedValue || this._WorkPackage.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeWorkPackage_EmployeeWorkPackageETC", Storage="_EmployeeWorkPackageETCs", ThisKey="empId,projId,wpId", OtherKey="empId,projId,wpId")]
		public EntitySet<EmployeeWorkPackageETC> EmployeeWorkPackageETCs
		{
			get
			{
				return this._EmployeeWorkPackageETCs;
			}
			set
			{
				this._EmployeeWorkPackageETCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeWorkPackage_WorkPackageResponsibleEngineer", Storage="_WorkPackageResponsibleEngineers", ThisKey="empId,projId,wpId", OtherKey="responsibleEngineer,projId,wpId")]
		public EntitySet<WorkPackageResponsibleEngineer> WorkPackageResponsibleEngineers
		{
			get
			{
				return this._WorkPackageResponsibleEngineers;
			}
			set
			{
				this._WorkPackageResponsibleEngineers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeProject_EmployeeWorkPackage", Storage="_EmployeeProject", ThisKey="projId,empId", OtherKey="projId,empId", IsForeignKey=true)]
		public EmployeeProject EmployeeProject
		{
			get
			{
				return this._EmployeeProject.Entity;
			}
			set
			{
				EmployeeProject previousValue = this._EmployeeProject.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeProject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeProject.Entity = null;
						previousValue.EmployeeWorkPackages.Remove(this);
					}
					this._EmployeeProject.Entity = value;
					if ((value != null))
					{
						value.EmployeeWorkPackages.Add(this);
						this._projId = value.projId;
						this._empId = value.empId;
					}
					else
					{
						this._projId = default(int);
						this._empId = default(int);
					}
					this.SendPropertyChanged("EmployeeProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_EmployeeWorkPackage", Storage="_WorkPackage", ThisKey="projId,wpId", OtherKey="projId,wpId", IsForeignKey=true)]
		public WorkPackage WorkPackage
		{
			get
			{
				return this._WorkPackage.Entity;
			}
			set
			{
				WorkPackage previousValue = this._WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkPackage.Entity = null;
						previousValue.EmployeeWorkPackages.Remove(this);
					}
					this._WorkPackage.Entity = value;
					if ((value != null))
					{
						value.EmployeeWorkPackages.Add(this);
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeWorkPackageETCs(EmployeeWorkPackageETC entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeWorkPackage = this;
		}
		
		private void detach_EmployeeWorkPackageETCs(EmployeeWorkPackageETC entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeWorkPackage = null;
		}
		
		private void attach_WorkPackageResponsibleEngineers(WorkPackageResponsibleEngineer entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeWorkPackage = this;
		}
		
		private void detach_WorkPackageResponsibleEngineers(WorkPackageResponsibleEngineer entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeWorkPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeWorkPackageETC")]
	public partial class EmployeeWorkPackageETC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private int _projId;
		
		private string _wpId;
		
		private System.DateTime _dateUpdated;
		
		private System.Nullable<int> _ETC_days;
		
		private EntityRef<WorkPackageStatusReport> _WorkPackageStatusReport;
		
		private EntityRef<EmployeeWorkPackage> _EmployeeWorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OndateUpdatedChanging(System.DateTime value);
    partial void OndateUpdatedChanged();
    partial void OnETC_daysChanging(System.Nullable<int> value);
    partial void OnETC_daysChanged();
    #endregion
		
		public EmployeeWorkPackageETC()
		{
			this._WorkPackageStatusReport = default(EntityRef<WorkPackageStatusReport>);
			this._EmployeeWorkPackage = default(EntityRef<EmployeeWorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._EmployeeWorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if ((this._WorkPackageStatusReport.HasLoadedOrAssignedValue || this._EmployeeWorkPackage.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if ((this._WorkPackageStatusReport.HasLoadedOrAssignedValue || this._EmployeeWorkPackage.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUpdated", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dateUpdated
		{
			get
			{
				return this._dateUpdated;
			}
			set
			{
				if ((this._dateUpdated != value))
				{
					if (this._WorkPackageStatusReport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._dateUpdated = value;
					this.SendPropertyChanged("dateUpdated");
					this.OndateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETC_days", DbType="Int")]
		public System.Nullable<int> ETC_days
		{
			get
			{
				return this._ETC_days;
			}
			set
			{
				if ((this._ETC_days != value))
				{
					this.OnETC_daysChanging(value);
					this.SendPropertyChanging();
					this._ETC_days = value;
					this.SendPropertyChanged("ETC_days");
					this.OnETC_daysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackageStatusReport_EmployeeWorkPackageETC", Storage="_WorkPackageStatusReport", ThisKey="projId,wpId,dateUpdated", OtherKey="projId,wpId,reportDate", IsForeignKey=true)]
		public WorkPackageStatusReport WorkPackageStatusReport
		{
			get
			{
				return this._WorkPackageStatusReport.Entity;
			}
			set
			{
				WorkPackageStatusReport previousValue = this._WorkPackageStatusReport.Entity;
				if (((previousValue != value) 
							|| (this._WorkPackageStatusReport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkPackageStatusReport.Entity = null;
						previousValue.EmployeeWorkPackageETCs.Remove(this);
					}
					this._WorkPackageStatusReport.Entity = value;
					if ((value != null))
					{
						value.EmployeeWorkPackageETCs.Add(this);
						this._projId = value.projId;
						this._wpId = value.wpId;
						this._dateUpdated = value.reportDate;
					}
					else
					{
						this._projId = default(int);
						this._wpId = default(string);
						this._dateUpdated = default(System.DateTime);
					}
					this.SendPropertyChanged("WorkPackageStatusReport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeWorkPackage_EmployeeWorkPackageETC", Storage="_EmployeeWorkPackage", ThisKey="empId,projId,wpId", OtherKey="empId,projId,wpId", IsForeignKey=true)]
		public EmployeeWorkPackage EmployeeWorkPackage
		{
			get
			{
				return this._EmployeeWorkPackage.Entity;
			}
			set
			{
				EmployeeWorkPackage previousValue = this._EmployeeWorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeWorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeWorkPackage.Entity = null;
						previousValue.EmployeeWorkPackageETCs.Remove(this);
					}
					this._EmployeeWorkPackage.Entity = value;
					if ((value != null))
					{
						value.EmployeeWorkPackageETCs.Add(this);
						this._empId = value.empId;
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._empId = default(int);
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("EmployeeWorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HumanResourcesStaff")]
	public partial class HumanResourcesStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    #endregion
		
		public HumanResourcesStaff()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_HumanResourcesStaff", Storage="_Employee", ThisKey="empId", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.HumanResourcesStaff = null;
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.HumanResourcesStaff = this;
						this._empId = value.empId;
					}
					else
					{
						this._empId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonLevel")]
	public partial class PersonLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pLevel;
		
		private decimal _rate;
		
		private decimal _fiscalYear;
		
		private EntitySet<EmployeePersonLevel> _EmployeePersonLevels;
		
		private EntitySet<WorkPackageBudgetPM> _WorkPackageBudgetPMs;
		
		private EntitySet<WorkPackageEstimateRE> _WorkPackageEstimateREs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpLevelChanging(string value);
    partial void OnpLevelChanged();
    partial void OnrateChanging(decimal value);
    partial void OnrateChanged();
    partial void OnfiscalYearChanging(decimal value);
    partial void OnfiscalYearChanged();
    #endregion
		
		public PersonLevel()
		{
			this._EmployeePersonLevels = new EntitySet<EmployeePersonLevel>(new Action<EmployeePersonLevel>(this.attach_EmployeePersonLevels), new Action<EmployeePersonLevel>(this.detach_EmployeePersonLevels));
			this._WorkPackageBudgetPMs = new EntitySet<WorkPackageBudgetPM>(new Action<WorkPackageBudgetPM>(this.attach_WorkPackageBudgetPMs), new Action<WorkPackageBudgetPM>(this.detach_WorkPackageBudgetPMs));
			this._WorkPackageEstimateREs = new EntitySet<WorkPackageEstimateRE>(new Action<WorkPackageEstimateRE>(this.attach_WorkPackageEstimateREs), new Action<WorkPackageEstimateRE>(this.detach_WorkPackageEstimateREs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pLevel", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pLevel
		{
			get
			{
				return this._pLevel;
			}
			set
			{
				if ((this._pLevel != value))
				{
					this.OnpLevelChanging(value);
					this.SendPropertyChanging();
					this._pLevel = value;
					this.SendPropertyChanged("pLevel");
					this.OnpLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="Decimal(5,2) NOT NULL")]
		public decimal rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this.OnrateChanging(value);
					this.SendPropertyChanging();
					this._rate = value;
					this.SendPropertyChanged("rate");
					this.OnrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiscalYear", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal fiscalYear
		{
			get
			{
				return this._fiscalYear;
			}
			set
			{
				if ((this._fiscalYear != value))
				{
					this.OnfiscalYearChanging(value);
					this.SendPropertyChanging();
					this._fiscalYear = value;
					this.SendPropertyChanged("fiscalYear");
					this.OnfiscalYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonLevel_EmployeePersonLevel", Storage="_EmployeePersonLevels", ThisKey="pLevel,fiscalYear", OtherKey="pLevel,fiscalYear")]
		public EntitySet<EmployeePersonLevel> EmployeePersonLevels
		{
			get
			{
				return this._EmployeePersonLevels;
			}
			set
			{
				this._EmployeePersonLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonLevel_WorkPackageBudgetPM", Storage="_WorkPackageBudgetPMs", ThisKey="pLevel,fiscalYear", OtherKey="pLevel,fiscalYear")]
		public EntitySet<WorkPackageBudgetPM> WorkPackageBudgetPMs
		{
			get
			{
				return this._WorkPackageBudgetPMs;
			}
			set
			{
				this._WorkPackageBudgetPMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonLevel_WorkPackageEstimateRE", Storage="_WorkPackageEstimateREs", ThisKey="pLevel,fiscalYear", OtherKey="pLevel,fiscalYear")]
		public EntitySet<WorkPackageEstimateRE> WorkPackageEstimateREs
		{
			get
			{
				return this._WorkPackageEstimateREs;
			}
			set
			{
				this._WorkPackageEstimateREs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeePersonLevels(EmployeePersonLevel entity)
		{
			this.SendPropertyChanging();
			entity.PersonLevel = this;
		}
		
		private void detach_EmployeePersonLevels(EmployeePersonLevel entity)
		{
			this.SendPropertyChanging();
			entity.PersonLevel = null;
		}
		
		private void attach_WorkPackageBudgetPMs(WorkPackageBudgetPM entity)
		{
			this.SendPropertyChanging();
			entity.PersonLevel = this;
		}
		
		private void detach_WorkPackageBudgetPMs(WorkPackageBudgetPM entity)
		{
			this.SendPropertyChanging();
			entity.PersonLevel = null;
		}
		
		private void attach_WorkPackageEstimateREs(WorkPackageEstimateRE entity)
		{
			this.SendPropertyChanging();
			entity.PersonLevel = this;
		}
		
		private void detach_WorkPackageEstimateREs(WorkPackageEstimateRE entity)
		{
			this.SendPropertyChanging();
			entity.PersonLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projId;
		
		private string _projName;
		
		private System.Nullable<int> _manager;
		
		private EntitySet<EmployeeProject> _EmployeeProjects;
		
		private EntitySet<WorkPackage> _WorkPackages;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnprojNameChanging(string value);
    partial void OnprojNameChanged();
    partial void OnmanagerChanging(System.Nullable<int> value);
    partial void OnmanagerChanged();
    #endregion
		
		public Project()
		{
			this._EmployeeProjects = new EntitySet<EmployeeProject>(new Action<EmployeeProject>(this.attach_EmployeeProjects), new Action<EmployeeProject>(this.detach_EmployeeProjects));
			this._WorkPackages = new EntitySet<WorkPackage>(new Action<WorkPackage>(this.attach_WorkPackages), new Action<WorkPackage>(this.detach_WorkPackages));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string projName
		{
			get
			{
				return this._projName;
			}
			set
			{
				if ((this._projName != value))
				{
					this.OnprojNameChanging(value);
					this.SendPropertyChanging();
					this._projName = value;
					this.SendPropertyChanged("projName");
					this.OnprojNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manager", DbType="Int")]
		public System.Nullable<int> manager
		{
			get
			{
				return this._manager;
			}
			set
			{
				if ((this._manager != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanagerChanging(value);
					this.SendPropertyChanging();
					this._manager = value;
					this.SendPropertyChanged("manager");
					this.OnmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_EmployeeProject", Storage="_EmployeeProjects", ThisKey="projId", OtherKey="projId")]
		public EntitySet<EmployeeProject> EmployeeProjects
		{
			get
			{
				return this._EmployeeProjects;
			}
			set
			{
				this._EmployeeProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_WorkPackage", Storage="_WorkPackages", ThisKey="projId", OtherKey="projId")]
		public EntitySet<WorkPackage> WorkPackages
		{
			get
			{
				return this._WorkPackages;
			}
			set
			{
				this._WorkPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Project", Storage="_Employee", ThisKey="manager", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._manager = value.empId;
					}
					else
					{
						this._manager = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeProjects(EmployeeProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_EmployeeProjects(EmployeeProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_WorkPackages(WorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_WorkPackages(WorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheetEntry")]
	public partial class TimeSheetEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private System.DateTime _tsDate;
		
		private int _projId;
		
		private string _wpId;
		
		private decimal _sat;
		
		private decimal _sun;
		
		private decimal _mon;
		
		private decimal _tue;
		
		private decimal _wed;
		
		private decimal _thu;
		
		private decimal _fri;
		
		private string _notes;
		
		private EntityRef<TimeSheetHeader> _TimeSheetHeader;
		
		private EntityRef<WorkPackage> _WorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OntsDateChanging(System.DateTime value);
    partial void OntsDateChanged();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OnsatChanging(decimal value);
    partial void OnsatChanged();
    partial void OnsunChanging(decimal value);
    partial void OnsunChanged();
    partial void OnmonChanging(decimal value);
    partial void OnmonChanged();
    partial void OntueChanging(decimal value);
    partial void OntueChanged();
    partial void OnwedChanging(decimal value);
    partial void OnwedChanged();
    partial void OnthuChanging(decimal value);
    partial void OnthuChanged();
    partial void OnfriChanging(decimal value);
    partial void OnfriChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    #endregion
		
		public TimeSheetEntry()
		{
			this._TimeSheetHeader = default(EntityRef<TimeSheetHeader>);
			this._WorkPackage = default(EntityRef<WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._TimeSheetHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tsDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime tsDate
		{
			get
			{
				return this._tsDate;
			}
			set
			{
				if ((this._tsDate != value))
				{
					if (this._TimeSheetHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntsDateChanging(value);
					this.SendPropertyChanging();
					this._tsDate = value;
					this.SendPropertyChanged("tsDate");
					this.OntsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sat", DbType="Decimal(3,1) NOT NULL")]
		public decimal sat
		{
			get
			{
				return this._sat;
			}
			set
			{
				if ((this._sat != value))
				{
					this.OnsatChanging(value);
					this.SendPropertyChanging();
					this._sat = value;
					this.SendPropertyChanged("sat");
					this.OnsatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sun", DbType="Decimal(3,1) NOT NULL")]
		public decimal sun
		{
			get
			{
				return this._sun;
			}
			set
			{
				if ((this._sun != value))
				{
					this.OnsunChanging(value);
					this.SendPropertyChanging();
					this._sun = value;
					this.SendPropertyChanged("sun");
					this.OnsunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mon", DbType="Decimal(3,1) NOT NULL")]
		public decimal mon
		{
			get
			{
				return this._mon;
			}
			set
			{
				if ((this._mon != value))
				{
					this.OnmonChanging(value);
					this.SendPropertyChanging();
					this._mon = value;
					this.SendPropertyChanged("mon");
					this.OnmonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tue", DbType="Decimal(3,1) NOT NULL")]
		public decimal tue
		{
			get
			{
				return this._tue;
			}
			set
			{
				if ((this._tue != value))
				{
					this.OntueChanging(value);
					this.SendPropertyChanging();
					this._tue = value;
					this.SendPropertyChanged("tue");
					this.OntueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wed", DbType="Decimal(3,1) NOT NULL")]
		public decimal wed
		{
			get
			{
				return this._wed;
			}
			set
			{
				if ((this._wed != value))
				{
					this.OnwedChanging(value);
					this.SendPropertyChanging();
					this._wed = value;
					this.SendPropertyChanged("wed");
					this.OnwedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thu", DbType="Decimal(3,1) NOT NULL")]
		public decimal thu
		{
			get
			{
				return this._thu;
			}
			set
			{
				if ((this._thu != value))
				{
					this.OnthuChanging(value);
					this.SendPropertyChanging();
					this._thu = value;
					this.SendPropertyChanged("thu");
					this.OnthuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fri", DbType="Decimal(3,1) NOT NULL")]
		public decimal fri
		{
			get
			{
				return this._fri;
			}
			set
			{
				if ((this._fri != value))
				{
					this.OnfriChanging(value);
					this.SendPropertyChanging();
					this._fri = value;
					this.SendPropertyChanged("fri");
					this.OnfriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(MAX)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheetHeader_TimeSheetEntry", Storage="_TimeSheetHeader", ThisKey="empId,tsDate", OtherKey="empId,tsDate", IsForeignKey=true)]
		public TimeSheetHeader TimeSheetHeader
		{
			get
			{
				return this._TimeSheetHeader.Entity;
			}
			set
			{
				TimeSheetHeader previousValue = this._TimeSheetHeader.Entity;
				if (((previousValue != value) 
							|| (this._TimeSheetHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeSheetHeader.Entity = null;
						previousValue.TimeSheetEntries.Remove(this);
					}
					this._TimeSheetHeader.Entity = value;
					if ((value != null))
					{
						value.TimeSheetEntries.Add(this);
						this._empId = value.empId;
						this._tsDate = value.tsDate;
					}
					else
					{
						this._empId = default(int);
						this._tsDate = default(System.DateTime);
					}
					this.SendPropertyChanged("TimeSheetHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_TimeSheetEntry", Storage="_WorkPackage", ThisKey="projId,wpId", OtherKey="projId,wpId", IsForeignKey=true)]
		public WorkPackage WorkPackage
		{
			get
			{
				return this._WorkPackage.Entity;
			}
			set
			{
				WorkPackage previousValue = this._WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkPackage.Entity = null;
						previousValue.TimeSheetEntries.Remove(this);
					}
					this._WorkPackage.Entity = value;
					if ((value != null))
					{
						value.TimeSheetEntries.Add(this);
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeSheetHeader")]
	public partial class TimeSheetHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private System.DateTime _tsDate;
		
		private string _status;
		
		private string _comments;
		
		private System.Nullable<int> _approvedBy;
		
		private EntitySet<DefaultTimeSheet> _DefaultTimeSheets;
		
		private EntitySet<TimeSheetEntry> _TimeSheetEntries;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OntsDateChanging(System.DateTime value);
    partial void OntsDateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnapprovedByChanging(System.Nullable<int> value);
    partial void OnapprovedByChanged();
    #endregion
		
		public TimeSheetHeader()
		{
			this._DefaultTimeSheets = new EntitySet<DefaultTimeSheet>(new Action<DefaultTimeSheet>(this.attach_DefaultTimeSheets), new Action<DefaultTimeSheet>(this.detach_DefaultTimeSheets));
			this._TimeSheetEntries = new EntitySet<TimeSheetEntry>(new Action<TimeSheetEntry>(this.attach_TimeSheetEntries), new Action<TimeSheetEntry>(this.detach_TimeSheetEntries));
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tsDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime tsDate
		{
			get
			{
				return this._tsDate;
			}
			set
			{
				if ((this._tsDate != value))
				{
					this.OntsDateChanging(value);
					this.SendPropertyChanging();
					this._tsDate = value;
					this.SendPropertyChanged("tsDate");
					this.OntsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(9)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(MAX)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approvedBy", DbType="Int")]
		public System.Nullable<int> approvedBy
		{
			get
			{
				return this._approvedBy;
			}
			set
			{
				if ((this._approvedBy != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnapprovedByChanging(value);
					this.SendPropertyChanging();
					this._approvedBy = value;
					this.SendPropertyChanged("approvedBy");
					this.OnapprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheetHeader_DefaultTimeSheet", Storage="_DefaultTimeSheets", ThisKey="empId,tsDate", OtherKey="empId,tsDate")]
		public EntitySet<DefaultTimeSheet> DefaultTimeSheets
		{
			get
			{
				return this._DefaultTimeSheets;
			}
			set
			{
				this._DefaultTimeSheets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeSheetHeader_TimeSheetEntry", Storage="_TimeSheetEntries", ThisKey="empId,tsDate", OtherKey="empId,tsDate")]
		public EntitySet<TimeSheetEntry> TimeSheetEntries
		{
			get
			{
				return this._TimeSheetEntries;
			}
			set
			{
				this._TimeSheetEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeSheetHeader", Storage="_Employee", ThisKey="approvedBy", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.TimeSheetHeaders.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.TimeSheetHeaders.Add(this);
						this._approvedBy = value.empId;
					}
					else
					{
						this._approvedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_TimeSheetHeader1", Storage="_Employee1", ThisKey="empId", OtherKey="empId", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.TimeSheetHeaders1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.TimeSheetHeaders1.Add(this);
						this._empId = value.empId;
					}
					else
					{
						this._empId = default(int);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DefaultTimeSheets(DefaultTimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheetHeader = this;
		}
		
		private void detach_DefaultTimeSheets(DefaultTimeSheet entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheetHeader = null;
		}
		
		private void attach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheetHeader = this;
		}
		
		private void detach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.TimeSheetHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkPackage")]
	public partial class WorkPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projId;
		
		private string _wpId;
		
		private string _name;
		
		private string _description;
		
		private System.Nullable<decimal> _unallocated_dollars;
		
		private System.Nullable<decimal> _allocated_dollars;
		
		private EntitySet<WorkPackageStatusReport> _WorkPackageStatusReports;
		
		private EntitySet<EmployeeWorkPackage> _EmployeeWorkPackages;
		
		private EntitySet<TimeSheetEntry> _TimeSheetEntries;
		
		private EntitySet<WorkPackageBudgetPM> _WorkPackageBudgetPMs;
		
		private EntitySet<WorkPackageEstimateRE> _WorkPackageEstimateREs;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onunallocated_dollarsChanging(System.Nullable<decimal> value);
    partial void Onunallocated_dollarsChanged();
    partial void Onallocated_dollarsChanging(System.Nullable<decimal> value);
    partial void Onallocated_dollarsChanged();
    #endregion
		
		public WorkPackage()
		{
			this._WorkPackageStatusReports = new EntitySet<WorkPackageStatusReport>(new Action<WorkPackageStatusReport>(this.attach_WorkPackageStatusReports), new Action<WorkPackageStatusReport>(this.detach_WorkPackageStatusReports));
			this._EmployeeWorkPackages = new EntitySet<EmployeeWorkPackage>(new Action<EmployeeWorkPackage>(this.attach_EmployeeWorkPackages), new Action<EmployeeWorkPackage>(this.detach_EmployeeWorkPackages));
			this._TimeSheetEntries = new EntitySet<TimeSheetEntry>(new Action<TimeSheetEntry>(this.attach_TimeSheetEntries), new Action<TimeSheetEntry>(this.detach_TimeSheetEntries));
			this._WorkPackageBudgetPMs = new EntitySet<WorkPackageBudgetPM>(new Action<WorkPackageBudgetPM>(this.attach_WorkPackageBudgetPMs), new Action<WorkPackageBudgetPM>(this.detach_WorkPackageBudgetPMs));
			this._WorkPackageEstimateREs = new EntitySet<WorkPackageEstimateRE>(new Action<WorkPackageEstimateRE>(this.attach_WorkPackageEstimateREs), new Action<WorkPackageEstimateRE>(this.detach_WorkPackageEstimateREs));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unallocated_dollars", DbType="Decimal(11,2)")]
		public System.Nullable<decimal> unallocated_dollars
		{
			get
			{
				return this._unallocated_dollars;
			}
			set
			{
				if ((this._unallocated_dollars != value))
				{
					this.Onunallocated_dollarsChanging(value);
					this.SendPropertyChanging();
					this._unallocated_dollars = value;
					this.SendPropertyChanged("unallocated_dollars");
					this.Onunallocated_dollarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allocated_dollars", DbType="Decimal(11,2)")]
		public System.Nullable<decimal> allocated_dollars
		{
			get
			{
				return this._allocated_dollars;
			}
			set
			{
				if ((this._allocated_dollars != value))
				{
					this.Onallocated_dollarsChanging(value);
					this.SendPropertyChanging();
					this._allocated_dollars = value;
					this.SendPropertyChanged("allocated_dollars");
					this.Onallocated_dollarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_WorkPackageStatusReport", Storage="_WorkPackageStatusReports", ThisKey="projId,wpId", OtherKey="projId,wpId")]
		public EntitySet<WorkPackageStatusReport> WorkPackageStatusReports
		{
			get
			{
				return this._WorkPackageStatusReports;
			}
			set
			{
				this._WorkPackageStatusReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_EmployeeWorkPackage", Storage="_EmployeeWorkPackages", ThisKey="projId,wpId", OtherKey="projId,wpId")]
		public EntitySet<EmployeeWorkPackage> EmployeeWorkPackages
		{
			get
			{
				return this._EmployeeWorkPackages;
			}
			set
			{
				this._EmployeeWorkPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_TimeSheetEntry", Storage="_TimeSheetEntries", ThisKey="projId,wpId", OtherKey="projId,wpId")]
		public EntitySet<TimeSheetEntry> TimeSheetEntries
		{
			get
			{
				return this._TimeSheetEntries;
			}
			set
			{
				this._TimeSheetEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_WorkPackageBudgetPM", Storage="_WorkPackageBudgetPMs", ThisKey="projId,wpId", OtherKey="projId,wpId")]
		public EntitySet<WorkPackageBudgetPM> WorkPackageBudgetPMs
		{
			get
			{
				return this._WorkPackageBudgetPMs;
			}
			set
			{
				this._WorkPackageBudgetPMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_WorkPackageEstimateRE", Storage="_WorkPackageEstimateREs", ThisKey="projId,wpId", OtherKey="projId,wpId")]
		public EntitySet<WorkPackageEstimateRE> WorkPackageEstimateREs
		{
			get
			{
				return this._WorkPackageEstimateREs;
			}
			set
			{
				this._WorkPackageEstimateREs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_WorkPackage", Storage="_Project", ThisKey="projId", OtherKey="projId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.WorkPackages.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.WorkPackages.Add(this);
						this._projId = value.projId;
					}
					else
					{
						this._projId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkPackageStatusReports(WorkPackageStatusReport entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = this;
		}
		
		private void detach_WorkPackageStatusReports(WorkPackageStatusReport entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = null;
		}
		
		private void attach_EmployeeWorkPackages(EmployeeWorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = this;
		}
		
		private void detach_EmployeeWorkPackages(EmployeeWorkPackage entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = null;
		}
		
		private void attach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = this;
		}
		
		private void detach_TimeSheetEntries(TimeSheetEntry entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = null;
		}
		
		private void attach_WorkPackageBudgetPMs(WorkPackageBudgetPM entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = this;
		}
		
		private void detach_WorkPackageBudgetPMs(WorkPackageBudgetPM entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = null;
		}
		
		private void attach_WorkPackageEstimateREs(WorkPackageEstimateRE entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = this;
		}
		
		private void detach_WorkPackageEstimateREs(WorkPackageEstimateRE entity)
		{
			this.SendPropertyChanging();
			entity.WorkPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkPackageBudgetPM")]
	public partial class WorkPackageBudgetPM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _dateUpdated;
		
		private int _projId;
		
		private string _wpId;
		
		private string _pLevel;
		
		private System.Nullable<decimal> _allocated_days;
		
		private decimal _fiscalYear;
		
		private EntityRef<PersonLevel> _PersonLevel;
		
		private EntityRef<WorkPackage> _WorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndateUpdatedChanging(System.DateTime value);
    partial void OndateUpdatedChanged();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OnpLevelChanging(string value);
    partial void OnpLevelChanged();
    partial void Onallocated_daysChanging(System.Nullable<decimal> value);
    partial void Onallocated_daysChanged();
    partial void OnfiscalYearChanging(decimal value);
    partial void OnfiscalYearChanged();
    #endregion
		
		public WorkPackageBudgetPM()
		{
			this._PersonLevel = default(EntityRef<PersonLevel>);
			this._WorkPackage = default(EntityRef<WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUpdated", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dateUpdated
		{
			get
			{
				return this._dateUpdated;
			}
			set
			{
				if ((this._dateUpdated != value))
				{
					this.OndateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._dateUpdated = value;
					this.SendPropertyChanged("dateUpdated");
					this.OndateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pLevel", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pLevel
		{
			get
			{
				return this._pLevel;
			}
			set
			{
				if ((this._pLevel != value))
				{
					if (this._PersonLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpLevelChanging(value);
					this.SendPropertyChanging();
					this._pLevel = value;
					this.SendPropertyChanged("pLevel");
					this.OnpLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_allocated_days", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> allocated_days
		{
			get
			{
				return this._allocated_days;
			}
			set
			{
				if ((this._allocated_days != value))
				{
					this.Onallocated_daysChanging(value);
					this.SendPropertyChanging();
					this._allocated_days = value;
					this.SendPropertyChanged("allocated_days");
					this.Onallocated_daysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiscalYear", DbType="Decimal(4,0) NOT NULL")]
		public decimal fiscalYear
		{
			get
			{
				return this._fiscalYear;
			}
			set
			{
				if ((this._fiscalYear != value))
				{
					if (this._PersonLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiscalYearChanging(value);
					this.SendPropertyChanging();
					this._fiscalYear = value;
					this.SendPropertyChanged("fiscalYear");
					this.OnfiscalYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonLevel_WorkPackageBudgetPM", Storage="_PersonLevel", ThisKey="pLevel,fiscalYear", OtherKey="pLevel,fiscalYear", IsForeignKey=true)]
		public PersonLevel PersonLevel
		{
			get
			{
				return this._PersonLevel.Entity;
			}
			set
			{
				PersonLevel previousValue = this._PersonLevel.Entity;
				if (((previousValue != value) 
							|| (this._PersonLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonLevel.Entity = null;
						previousValue.WorkPackageBudgetPMs.Remove(this);
					}
					this._PersonLevel.Entity = value;
					if ((value != null))
					{
						value.WorkPackageBudgetPMs.Add(this);
						this._pLevel = value.pLevel;
						this._fiscalYear = value.fiscalYear;
					}
					else
					{
						this._pLevel = default(string);
						this._fiscalYear = default(decimal);
					}
					this.SendPropertyChanged("PersonLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_WorkPackageBudgetPM", Storage="_WorkPackage", ThisKey="projId,wpId", OtherKey="projId,wpId", IsForeignKey=true)]
		public WorkPackage WorkPackage
		{
			get
			{
				return this._WorkPackage.Entity;
			}
			set
			{
				WorkPackage previousValue = this._WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkPackage.Entity = null;
						previousValue.WorkPackageBudgetPMs.Remove(this);
					}
					this._WorkPackage.Entity = value;
					if ((value != null))
					{
						value.WorkPackageBudgetPMs.Add(this);
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkPackageEstimateRE")]
	public partial class WorkPackageEstimateRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _dateUpdated;
		
		private int _projId;
		
		private string _wpId;
		
		private string _pLevel;
		
		private System.Nullable<decimal> _estimated_days;
		
		private decimal _fiscalYear;
		
		private EntityRef<PersonLevel> _PersonLevel;
		
		private EntityRef<WorkPackage> _WorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndateUpdatedChanging(System.DateTime value);
    partial void OndateUpdatedChanged();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OnpLevelChanging(string value);
    partial void OnpLevelChanged();
    partial void Onestimated_daysChanging(System.Nullable<decimal> value);
    partial void Onestimated_daysChanged();
    partial void OnfiscalYearChanging(decimal value);
    partial void OnfiscalYearChanged();
    #endregion
		
		public WorkPackageEstimateRE()
		{
			this._PersonLevel = default(EntityRef<PersonLevel>);
			this._WorkPackage = default(EntityRef<WorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUpdated", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dateUpdated
		{
			get
			{
				return this._dateUpdated;
			}
			set
			{
				if ((this._dateUpdated != value))
				{
					this.OndateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._dateUpdated = value;
					this.SendPropertyChanged("dateUpdated");
					this.OndateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if (this._WorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pLevel", DbType="Char(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pLevel
		{
			get
			{
				return this._pLevel;
			}
			set
			{
				if ((this._pLevel != value))
				{
					if (this._PersonLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpLevelChanging(value);
					this.SendPropertyChanging();
					this._pLevel = value;
					this.SendPropertyChanged("pLevel");
					this.OnpLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estimated_days", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> estimated_days
		{
			get
			{
				return this._estimated_days;
			}
			set
			{
				if ((this._estimated_days != value))
				{
					this.Onestimated_daysChanging(value);
					this.SendPropertyChanging();
					this._estimated_days = value;
					this.SendPropertyChanged("estimated_days");
					this.Onestimated_daysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fiscalYear", DbType="Decimal(4,0) NOT NULL")]
		public decimal fiscalYear
		{
			get
			{
				return this._fiscalYear;
			}
			set
			{
				if ((this._fiscalYear != value))
				{
					if (this._PersonLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfiscalYearChanging(value);
					this.SendPropertyChanging();
					this._fiscalYear = value;
					this.SendPropertyChanged("fiscalYear");
					this.OnfiscalYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonLevel_WorkPackageEstimateRE", Storage="_PersonLevel", ThisKey="pLevel,fiscalYear", OtherKey="pLevel,fiscalYear", IsForeignKey=true)]
		public PersonLevel PersonLevel
		{
			get
			{
				return this._PersonLevel.Entity;
			}
			set
			{
				PersonLevel previousValue = this._PersonLevel.Entity;
				if (((previousValue != value) 
							|| (this._PersonLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonLevel.Entity = null;
						previousValue.WorkPackageEstimateREs.Remove(this);
					}
					this._PersonLevel.Entity = value;
					if ((value != null))
					{
						value.WorkPackageEstimateREs.Add(this);
						this._pLevel = value.pLevel;
						this._fiscalYear = value.fiscalYear;
					}
					else
					{
						this._pLevel = default(string);
						this._fiscalYear = default(decimal);
					}
					this.SendPropertyChanged("PersonLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkPackage_WorkPackageEstimateRE", Storage="_WorkPackage", ThisKey="projId,wpId", OtherKey="projId,wpId", IsForeignKey=true)]
		public WorkPackage WorkPackage
		{
			get
			{
				return this._WorkPackage.Entity;
			}
			set
			{
				WorkPackage previousValue = this._WorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._WorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkPackage.Entity = null;
						previousValue.WorkPackageEstimateREs.Remove(this);
					}
					this._WorkPackage.Entity = value;
					if ((value != null))
					{
						value.WorkPackageEstimateREs.Add(this);
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("WorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkPackageResponsibleEngineer")]
	public partial class WorkPackageResponsibleEngineer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _projId;
		
		private string _wpId;
		
		private int _responsibleEngineer;
		
		private EntityRef<EmployeeWorkPackage> _EmployeeWorkPackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojIdChanging(int value);
    partial void OnprojIdChanged();
    partial void OnwpIdChanging(string value);
    partial void OnwpIdChanged();
    partial void OnresponsibleEngineerChanging(int value);
    partial void OnresponsibleEngineerChanged();
    #endregion
		
		public WorkPackageResponsibleEngineer()
		{
			this._EmployeeWorkPackage = default(EntityRef<EmployeeWorkPackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int projId
		{
			get
			{
				return this._projId;
			}
			set
			{
				if ((this._projId != value))
				{
					if (this._EmployeeWorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojIdChanging(value);
					this.SendPropertyChanging();
					this._projId = value;
					this.SendPropertyChanged("projId");
					this.OnprojIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wpId", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string wpId
		{
			get
			{
				return this._wpId;
			}
			set
			{
				if ((this._wpId != value))
				{
					if (this._EmployeeWorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwpIdChanging(value);
					this.SendPropertyChanging();
					this._wpId = value;
					this.SendPropertyChanged("wpId");
					this.OnwpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responsibleEngineer", DbType="Int NOT NULL")]
		public int responsibleEngineer
		{
			get
			{
				return this._responsibleEngineer;
			}
			set
			{
				if ((this._responsibleEngineer != value))
				{
					if (this._EmployeeWorkPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnresponsibleEngineerChanging(value);
					this.SendPropertyChanging();
					this._responsibleEngineer = value;
					this.SendPropertyChanged("responsibleEngineer");
					this.OnresponsibleEngineerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeWorkPackage_WorkPackageResponsibleEngineer", Storage="_EmployeeWorkPackage", ThisKey="responsibleEngineer,projId,wpId", OtherKey="empId,projId,wpId", IsForeignKey=true)]
		public EmployeeWorkPackage EmployeeWorkPackage
		{
			get
			{
				return this._EmployeeWorkPackage.Entity;
			}
			set
			{
				EmployeeWorkPackage previousValue = this._EmployeeWorkPackage.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeWorkPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeWorkPackage.Entity = null;
						previousValue.WorkPackageResponsibleEngineers.Remove(this);
					}
					this._EmployeeWorkPackage.Entity = value;
					if ((value != null))
					{
						value.WorkPackageResponsibleEngineers.Add(this);
						this._responsibleEngineer = value.empId;
						this._projId = value.projId;
						this._wpId = value.wpId;
					}
					else
					{
						this._responsibleEngineer = default(int);
						this._projId = default(int);
						this._wpId = default(string);
					}
					this.SendPropertyChanged("EmployeeWorkPackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
